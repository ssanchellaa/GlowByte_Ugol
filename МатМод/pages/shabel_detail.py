import streamlit as st
import pandas as pd
import os
import datetime
import calendar

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="FireWatch", page_icon="üî•", layout="wide")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
with open("styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# –®–∞–ø–∫–∞ —Å–∞–π—Ç–∞
def header():
    st.markdown("""
    <div class="site-header">
        <div class="logo">üî• FireWatch</div>
        <div class="nav">
            <a class="nav-item" href="/">–ì–ª–∞–≤–Ω–∞—è</a>
            <a class="nav-item" href="/stack">–®—Ç–∞–±–µ–ª–∏</a>
            <a class="nav-item" href="/warehouse">–°–∫–ª–∞–¥—ã</a>
            <a class="nav-item" href="/shipments">–í—ã–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–≥—Ä—É–∑–∫–∏</a>
            <a class="nav-item" href="/location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</a>
            <a class="nav-item" href="#">–û—Ç—á—ë—Ç—ã</a>
            <a class="nav-item" href="/help">–°–ø—Ä–∞–≤–∫–∞</a>
        </div>
    </div>
    """, unsafe_allow_html=True)

header()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
params = st.query_params
selected_date = params.get("date", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")



# –ó–∞–≥–ª—É—à–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def get_shabels_data():
    return pd.DataFrame([
        {"ID": 1, "–ù–∞–∑–≤–∞–Ω–∏–µ": "–®—Ç–∞–±–µ–ª—å 1", "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω": "2023-04-01", "–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ": "2023-05-10",
         "–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "450¬∞C"},
        {"ID": 2, "–ù–∞–∑–≤–∞–Ω–∏–µ": "–®—Ç–∞–±–µ–ª—å 2", "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω": "2023-04-15", "–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ": "2023-06-20",
         "–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "500¬∞C"},
        {"ID": 3, "–ù–∞–∑–≤–∞–Ω–∏–µ": "–®—Ç–∞–±–µ–ª—å 3", "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω": "2023-05-01", "–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ": "2023-07-30",
         "–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "480¬∞C"},
        {"ID": 4, "–ù–∞–∑–≤–∞–Ω–∏–µ": "–®—Ç–∞–±–µ–ª—å 4", "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω": "2023-06-05", "–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ": "2023-08-25",
         "–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "470¬∞C"},
        {"ID": 5, "–ù–∞–∑–≤–∞–Ω–∏–µ": "–®—Ç–∞–±–µ–ª—å 5", "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω": "2023-06-10", "–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ": "2023-09-12",
         "–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞": "460¬∞C"}
    ])

# –ü–æ–ª—É—á–µ–Ω–∏–µ ID —à—Ç–∞–±–µ–ª—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
try:
    shabel_id = int(params.get("shabel_id", 0))
except:
    shabel_id = 0

df = get_shabels_data()
shabel_row = df[df["ID"] == shabel_id]

if not shabel_row.empty:
    row = shabel_row.iloc[0]
    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    st.title(f"–®—Ç–∞–±–µ–ª—å {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}(id{row['ID']})")

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Ä–∞–º–∫–∞
    st.markdown("""
    <div style="padding: 20px; background-color: #ffffff; border-radius: 12px; margin: 20px 0; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
        <h3>–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
        <p><strong>–°–∫–ª–∞–¥:</strong> {warehouse}</p>
        <p><strong>–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ:</strong> {fire_date}</p>
        <p><strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong> –ø–µ—Ä–µ–º–µ—à–∞—Ç—å —É–≥–æ–ª—å –≤ —à—Ç–∞–±–µ–ª–µ</p>
    </div>
    """.format(
        warehouse=row['–°–∫–ª–∞–¥'] if '–°–∫–ª–∞–¥' in row else '–ù–µ —É–∫–∞–∑–∞–Ω',
        fire_date=row['–ë–ª–∏–∂–∞–π—à–µ–µ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏–µ']
    ), unsafe_allow_html=True)

    # –ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è
    def render_calendar(year, month, fire_prediction_days):
        cal = calendar.monthcalendar(year, month)
        month_name = calendar.month_name[month]
        html = f"<div class='calendar-wrapper'><h3>{month_name} {year}</h3><h4>–ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–∞–º–æ–≤–æ–∑–≥–æ—Ä–∞–Ω–∏–π</h4><table class='calendar'>"
        html += "<tr>" + "".join(
            f"<th class='center'>{day}</th>" for day in ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]) + "</tr>"

        for week in cal:
            html += "<tr>"
            for day in week:
                if day == 0:
                    html += "<td class='day empty'></td>"
                else:
                    classes = "day"
                    if day in fire_prediction_days:
                        date_str = datetime.date(year, month, day).isoformat()
                        html += f"<td class='{classes}' style='background-color: #ffebee;'><a href='/fire_details?date={date_str}&shabel_id={shabel_id}' style='text-decoration: none; color: #d32f2f; font-weight: bold;'>{day}</a></td>"
                    else:
                        html += f"<td class='{classes}'>{day}</td>"
            html += "</tr>"
        html += "</table></div>"
        return html

    def generate_fire_prediction_days(year, month):
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        # –°–µ–π—á–∞—Å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞—Ç—ã
        return [10, 15, 22]

    today = datetime.date.today()
    fire_prediction_days = generate_fire_prediction_days(today.year, today.month)

    col1, col2 = st.columns([1, 3])
    with col1:
        year = st.selectbox("–ì–æ–¥", list(range(2000, 2031)), index=today.year - 2000)
    with col2:
        month = st.selectbox("–ú–µ—Å—è—Ü", list(range(1, 13)), index=today.month - 1)

    st.markdown(render_calendar(year, month, fire_prediction_days), unsafe_allow_html=True)

    # –†–∞–∑–¥–µ–ª –∏–∑–º–µ—Ä–µ–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    st.markdown("""
    <hr style="border: 1px solid #e0e0e0; margin: 20px 0;">
    """, unsafe_allow_html=True)
    st.subheader("–ò–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")

    # –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ—Ä–µ–Ω–∏–π
    with st.form("temperature_measurement_form"):
        st.write("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ:")
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            date = st.date_input("–î–∞—Ç–∞ –∞–∫—Ç–∞")
        with col2:
            temperature = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)", min_value=0, max_value=1000)
        with col3:
            shift = st.selectbox("–°–º–µ–Ω–∞", ["1", "2", "3"])
        with col4:
            picket = st.text_input("–ü–∏–∫–µ—Ç")
        
        submit_button = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏—è")
        
        if submit_button:
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            st.success("–ò–∑–º–µ—Ä–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")

else:
    st.error("–®—Ç–∞–±–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
