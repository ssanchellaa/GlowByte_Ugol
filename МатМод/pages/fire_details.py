import streamlit as st
import pandas as pd
import os
import datetime
import random

params = st.query_params
selected_date = params.get("date", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
shabel_id = params.get("shabel_id", "–ù–µ —É–∫–∞–∑–∞–Ω")

st.title("–î–µ—Ç–∞–ª–∏ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è")
st.write(f"–î–∞—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è: {selected_date}")
st.write(f"ID —à—Ç–∞–±–µÃÅ–ª—è: {shabel_id}")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
st.markdown(f"""
<div style="padding: 20px; background-color: #fdf0f0; border-radius: 12px; margin-bottom: 20px;">
    <h3>üìÖ –î–∞—Ç–∞ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è: <span style="color: red;">{selected_date}</span></h3>
    <h4>üèóÔ∏è –®—Ç–∞–±–µ–ª—å ID: {shabel_id}</h4>
</div>
""", unsafe_allow_html=True)

# --- –ü—Ä–∏—á–∏–Ω—ã –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞) ---
st.subheader("–ü—Ä–∏—á–∏–Ω—ã –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è:")
reasons = [
    "üìå –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —è–¥—Ä–µ —à—Ç–∞–±–µ–ª—è",
    "üìå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è",
    "üìå –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤—ã—à–µ –Ω–æ—Ä–º—ã",
    "üìå –ò—Å—Ç–µ—á–µ–Ω–∏–µ —Å—Ä–æ–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è",
    "üìå –•–∏–º–∏—á–µ—Å–∫–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ —à—Ç–∞–±–µ–ª—è"
]
st.write("\n".join(reasons))

# --- –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–∑–∞–≥–ª—É—à–∫–∞) ---
st.subheader("üìà –î–∏–Ω–∞–º–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–Ω–µ–π)")

def generate_temperature_data():
    dates = pd.date_range(end=datetime.date.today(), periods=10)
    temps = [random.uniform(35.0, 80.0) for _ in range(10)]
    return pd.DataFrame({"–î–∞—Ç–∞": dates, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)": temps})

temp_data = generate_temperature_data()
st.line_chart(temp_data.set_index("–î–∞—Ç–∞"))

# --- –î—Ä—É–≥–∏–µ –º–µ—Ç—Ä–∏–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞) ---
st.subheader("üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:")

col1, col2, col3 = st.columns(3)
col1.metric("–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{max(temp_data['–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)']):.1f} ¬∞C")
col2.metric("–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{temp_data['–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)'].mean():.1f} ¬∞C")
col3.metric("–î–Ω–µ–π –¥–æ –≤–æ–∑–≥–æ—Ä–∞–Ω–∏—è", "‚âà 5 –¥–Ω–µ–π")  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ ML –º–æ–¥–µ–ª–∏

# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CSS —Å—Ç–∏–ª–µ–π (–µ—Å–ª–∏ –µ—Å—Ç—å) ---
style_path = os.path.join(os.path.dirname(__file__), "..", "styles.css")
if os.path.exists(style_path):
    with open(style_path, encoding="utf-8") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# --- –ù–∞–≤–∏–≥–∞—Ü–∏—è ---


